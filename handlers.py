from aiogram import Bot
from aiogram import F
from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.types import CallbackQuery
from aiogram.types import Message
from aiogram.fsm.state import State
from aiogram.fsm.state import StatesGroup
import keyboard
from dotenv import load_dotenv
import os

load_dotenv()

router = Router()

class Ticket(StatesGroup):
    situation = State()
    cabinet = State()
    sender = State()
    confirm = State()
    answer = State()

@router.message(CommandStart())
async def start_command(message : Message):
    await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úâÔ∏è –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É", —á—Ç–æ –±—ã –æ–±—Ä–∞—Ç–∏—Ç—Å—è –∫ –ò–¢-–æ—Ç–¥–µ–ª—É',
                         reply_markup = keyboard.ticket_button)


@router.message(F.text == '‚úâÔ∏è –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É')
async def situation_input(message : Message, state):
    await state.set_state(Ticket.situation)
    
    await message.answer('–û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é')


@router.message(Ticket.situation)
async def cabinet_input(message : Message, state):
    await state.update_data(situation = message.text)
    await state.set_state(Ticket.cabinet)
    
    await message.answer('–í –∫–∞–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ?')


@router.message(Ticket.cabinet)
async def sender_input(message : Message, state):
    await state.update_data(cabinet = message.text)
    await state.set_state(Ticket.sender)

    await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ @–í–∞—à–Æ–∑–µ—Ä–Ω–µ–π–º / –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏')


@router.message(Ticket.sender)
async def confirm(message : Message, state):
    await state.update_data(sender = message.text)
    await state.set_state(Ticket.confirm)

    data = await state.get_data()

    await message.answer(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π :\n"
                         f"–û–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏ : {data['situation']}\n"
                         f"–ö–∞–±–∏–Ω–µ—Ç : {data['cabinet']}\n"
                         f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å : {data['sender']}", reply_markup = keyboard.confirm_buttons)
    

@router.callback_query(F.data == 'edit')
async def edit_ticket(callback : CallbackQuery, state):
    await state.clear()
    await state.set_state(Ticket.situation)

    await callback.message.edit_text('–û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é')
    await callback.answer()


tickets = {}


@router.callback_query(F.data == 'confirm')
async def send_ticket(callback : CallbackQuery, state, bot : Bot):
    data = await state.get_data()

    sent = await bot.send_message(
        chat_id = os.getenv('CHAT_ID'),
        text=(
            f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞\n"
            f"–°–∏—Ç—É–∞—Ü–∏—è : {data['situation']}\n"
            f"–ö–∞–±–∏–Ω–µ—Ç : {data['cabinet']}\n"
            f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å : {data['sender']}"
        ), reply_markup = keyboard.answer_button
    )

    tickets[sent.message_id] = callback.from_user.id

    await callback.message.edit_text("–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞!")
    await state.clear()
    await callback.answer()


@router.callback_query(F.data == "answer")
async def answer(callback : CallbackQuery, state, bot : Bot):
    original_message = callback.message
    replied_id = original_message.message_id

    await state.update_data(ticket_id = replied_id)
    await state.set_state(Ticket.answer)

    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞—è–≤–∫—É : ")
    await callback.answer()


@router.message(Ticket.answer)
async def process_ticket_answer(message : Message, state, bot : Bot):
    data = await state.get_data()
    ticket_id = data["ticket_id"]

    if ticket_id in tickets:
        user_id = tickets[ticket_id]

        await bot.send_message(
            chat_id = user_id,
            text = (
                f"–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É:\n\n"
                f"{message.text}\n\n"
                f"–û—Ç @{message.from_user.username}"
            )
        )

        await message.answer("–í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")

    await state.clear()